import com.vanniktech.maven.publish.SonatypeHost
import org.jetbrains.kotlin.gradle.dsl.JvmTarget



plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
    id 'maven-publish'
    id "com.vanniktech.maven.publish.base" version "0.28.0"
}

group = 'io.github.cmh1448'
version = '0.1.0'

repositories {
    mavenCentral()
}


dependencies {
    api project(':autojwt-core')
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly "org.springframework.boot:spring-boot-starter-web"
}

mavenPublishing {
    coordinates('io.github.cmh1448', 'autojwt-spring-boot-starter', '0.1.0')
    pomFromGradleProperties()
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()

    pom {
        name = 'autojwt-spring-boot-starter'
        description = 'AutoJwt Spring Boot Starter'
        url = 'https://github.com/cmh1448/AutoJwt'
        licenses {
            license {
                name = 'MIT License'
                url = 'https://opensource.org/licenses/MIT'
            }
        }
        developers {
            developer {
                id = 'cmh1448'
                name = 'cmh1448'
                email = 'cmh1448@naver.com'
            }
        }
        scm {
            connection = 'scm:git:git://github.com/cmh1448/AutoJwt.git'
            developerConnection = 'scm:git:git://github.com/cmh1448/AutoJwt.git'
            url = 'https://github.com/cmh1448/AutoJwt'
        }
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

compileKotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_17
    }
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}